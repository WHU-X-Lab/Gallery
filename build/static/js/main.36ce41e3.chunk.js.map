{"version":3,"sources":["config.js","icons.js","App.js","serviceWorker.js","index.js"],"names":["APP_CONFIG","name","repo","url","image","svgGithub","t","className","viewBox","version","xmlns","p-id","width","height","d","fill","svgDoc","svgLab","svgClose","svgLink","App","useState","showPanel","setShowPanel","setUrl","head","setHead","handleClick","href","target","onClick","bind","this","src","frameBorder","map","app","index","key","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.36ce41e3.chunk.js","sourcesContent":["/**\n * @name 应用名称\n * @repo 应用仓库\n * @url 应用体验地址\n * @image 应用预览图\n */\nexport const APP_CONFIG = [\n    {\n        name: \"风场可视化\",\n        repo: \"https://github.com/WHU-X-Lab/wind-flow\",\n        url: \"https://whu-x-lab.github.io/wind-flow/\",\n        image:\n            \"https://tva1.sinaimg.cn/large/007S8ZIlly1gj1fifehuwj31q90u0kjo.jpg\",\n    },\n    {\n        name: \"3D地球\",\n        repo: \"https://github.com/WHU-X-Lab/3d-earth\",\n        url: \"https://whu-x-lab.github.io/3d-earth/\",\n        image:\n            \"https://tva1.sinaimg.cn/large/007S8ZIlgy1gj6c0t107ij31qc0u0dq6.jpg\",\n    },\n    {\n        name: \"边捆绑\",\n        repo: \"https://github.com/WHU-X-Lab/edge-bundling\",\n        url: \"\",\n        image:\n            \"https://tva1.sinaimg.cn/large/007S8ZIlgy1gj7buga03qj31qc0u0tqh.jpg\",\n    },\n]\n","import React from \"react\"\nexport const svgGithub = (\n    <svg\n        t=\"1601276053255\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1140\"\n        width=\"200\"\n        height=\"200\"\n    >\n        <path\n            d=\"M512 42.666667A464.64 464.64 0 0 0 42.666667 502.186667 460.373333 460.373333 0 0 0 363.52 938.666667c23.466667 4.266667 32-9.813333 32-22.186667v-78.08c-130.56 27.733333-158.293333-61.44-158.293333-61.44a122.026667 122.026667 0 0 0-52.053334-67.413333c-42.666667-28.16 3.413333-27.733333 3.413334-27.733334a98.56 98.56 0 0 1 71.68 47.36 101.12 101.12 0 0 0 136.533333 37.973334 99.413333 99.413333 0 0 1 29.866667-61.44c-104.106667-11.52-213.333333-50.773333-213.333334-226.986667a177.066667 177.066667 0 0 1 47.36-124.16 161.28 161.28 0 0 1 4.693334-121.173333s39.68-12.373333 128 46.933333a455.68 455.68 0 0 1 234.666666 0c89.6-59.306667 128-46.933333 128-46.933333a161.28 161.28 0 0 1 4.693334 121.173333A177.066667 177.066667 0 0 1 810.666667 477.866667c0 176.64-110.08 215.466667-213.333334 226.986666a106.666667 106.666667 0 0 1 32 85.333334v125.866666c0 14.933333 8.533333 26.88 32 22.186667A460.8 460.8 0 0 0 981.333333 502.186667 464.64 464.64 0 0 0 512 42.666667\"\n            fill=\"#fff\"\n            p-id=\"1141\"\n        ></path>\n    </svg>\n)\n\nexport const svgDoc = (\n    <svg\n        t=\"1601279089847\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"4113\"\n        width=\"200\"\n        height=\"200\"\n    >\n        <path\n            d=\"M512 0a512 512 0 1 0 512 512A512 512 0 0 0 512 0z m213.333333 668.373333a42.666667 42.666667 0 0 1-42.666666 42.666667H341.333333a42.666667 42.666667 0 0 1-42.666666-42.666667v-187.306666h426.666666z m0-232.106666H298.666667v-80.64a42.666667 42.666667 0 0 1 42.666666-42.666667h89.813334a21.333333 21.333333 0 0 1 16.426666 8.32l17.92 24.32a21.333333 21.333333 0 0 0 16.426667 8.32H682.666667a42.666667 42.666667 0 0 1 42.666666 42.666667z\"\n            fill=\"#ffffff\"\n            p-id=\"4114\"\n        ></path>\n    </svg>\n)\n\nexport const svgLab = (\n    <svg\n        t=\"1601280139259\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"3197\"\n        width=\"200\"\n        height=\"200\"\n    >\n        <path\n            d=\"M961.777778 806.940444c-0.469333-0.711111 0.497778 0.696889 0 0L680.149333 400.597333V77.084444c0-15.715556-7.665778-27.306667-23.367111-27.306666H386.545778c-15.701333 0-19.285333 11.605333-19.285334 27.306666v314.268445L69.745778 807.310222c-0.497778 0.696889-3.086222 3.939556-3.527111 4.693334-24.007111 41.614222-29.553778 79.943111-11.164445 111.786666 18.574222 32.156444 55.68 50.432 104.490667 50.432h703.303111c48.768 0 87.011556-18.304 105.585778-50.503111 18.432-31.928889 17.351111-75.136-6.656-116.778667zM414.392889 416.739556c3.370667-4.807111 9.770667-10.524444 9.770667-16.384V106.666667h199.111111v302.947555c0 5.859556-2.759111 11.719111 0.625777 16.512l130.702223 188.615111c-43.463111 17.521778-97.024 29.155556-206.663111-36.366222-79.431111-47.459556-177.763556-29.127111-244.608-6.385778l111.061333-155.249777zM918.044444 895.274667c-7.879111 13.653333-28.003556 22.058667-55.182222 22.058666H159.559111c-27.235556 0-47.36-8.376889-55.224889-22.001777-7.566222-13.112889-4.608-34.005333 8.120889-56.533334l160.526222-224.384c56.064-24.206222 173.781333-63.345778 260.380445-11.605333 69.006222 41.216 118.997333 54.243556 158.094222 54.243555 32.583111 0 57.6-9.059556 79.744-18.360888l138.737778 200.192c12.757333 22.528 15.715556 43.221333 8.106666 56.391111z\"\n            fill=\"#ffffff\"\n            p-id=\"3198\"\n        ></path>\n        <path\n            d=\"M313.258667 724.892444a77.880889 77.880889 0 0 0-77.809778 77.809778 77.895111 77.895111 0 0 0 77.809778 77.809778 77.895111 77.895111 0 0 0 77.809777-77.809778 77.880889 77.880889 0 0 0-77.809777-77.809778z m0 127.175112c-27.221333 0-49.365333-22.158222-49.365334-49.379556s22.144-49.365333 49.365334-49.365333 49.365333 22.144 49.365333 49.365333-22.144 49.379556-49.365333 49.379556zM722.133333 746.225778a67.214222 67.214222 0 0 0-67.143111 67.143111 67.228444 67.228444 0 0 0 67.143111 67.143111 67.228444 67.228444 0 0 0 67.157334-67.143111 67.214222 67.214222 0 0 0-67.157334-67.143111z m0 105.841778c-21.333333 0-38.698667-17.379556-38.698666-38.712889s17.365333-38.698667 38.698666-38.698667 38.712889 17.365333 38.712889 38.698667-17.379556 38.712889-38.712889 38.712889zM498.872889 646.670222a57.244444 57.244444 0 0 0-57.187556 57.187556 57.244444 57.244444 0 0 0 57.187556 57.187555c31.530667 0 57.187556-25.671111 57.187555-57.187555s-25.656889-57.187556-57.187555-57.187556z m0 85.944889a28.785778 28.785778 0 0 1-28.743111-28.743111c0-15.843556 12.899556-28.743111 28.743111-28.743111 15.843556 0 28.743111 12.885333 28.743111 28.743111s-12.899556 28.743111-28.743111 28.743111zM580.608 318.862222a14.222222 14.222222 0 0 0 14.222222-14.222222v-156.444444a14.222222 14.222222 0 1 0-28.444444 0v156.444444a14.222222 14.222222 0 0 0 14.222222 14.222222zM580.608 389.973333a14.222222 14.222222 0 0 0 14.222222-14.222222v-14.222222a14.222222 14.222222 0 1 0-28.444444 0v14.222222a14.222222 14.222222 0 0 0 14.222222 14.222222z\"\n            fill=\"#ffffff\"\n            p-id=\"3199\"\n        ></path>\n    </svg>\n)\n\nexport const svgClose = (\n    <svg\n        t=\"1601282938634\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"4006\"\n        width=\"200\"\n        height=\"200\"\n    >\n        <path\n            d=\"M810.666667 273.493333L750.506667 213.333333 512 451.84 273.493333 213.333333 213.333333 273.493333 451.84 512 213.333333 750.506667 273.493333 810.666667 512 572.16 750.506667 810.666667 810.666667 750.506667 572.16 512z\"\n            p-id=\"4007\"\n            fill=\"#000000\"\n        ></path>\n    </svg>\n)\n\nexport const svgLink = (\n    <svg\n        t=\"1601285097920\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"5718\"\n        width=\"200\"\n        height=\"200\"\n    >\n        <path\n            d=\"M597.333333 682.666667c-76.8 0-153.6-34.133333-204.8-102.4-12.8-17.066667-8.533333-46.933333 8.533334-59.733334 17.066667-12.8 46.933333-8.533333 59.733333 8.533334 55.466667 76.8 162.133333 89.6 238.933333 34.133333 8.533333-4.266667 12.8-8.533333 17.066667-17.066667l128-128c64-68.266667 64-174.933333-4.266667-238.933333s-170.666667-64-238.933333 0l-72.533333 72.533333c-17.066667 17.066667-42.666667 17.066667-59.733334 0-17.066667-17.066667-17.066667-42.666667 0-59.733333l72.533334-72.533333c98.133333-98.133333 256-98.133333 354.133333 0 102.4 98.133333 102.4 260.266667 4.266667 362.666666l-128 128c-8.533333 8.533333-17.066667 17.066667-29.866667 25.6-38.4 29.866667-89.6 46.933333-145.066667 46.933334z\"\n            p-id=\"5719\"\n            fill=\"#000000\"\n        ></path>\n        <path\n            d=\"M302.933333 977.066667c-64 0-128-25.6-179.2-72.533334-102.4-98.133333-102.4-260.266667-4.266666-362.666666l128-128c8.533333-4.266667 17.066667-12.8 25.6-21.333334 55.466667-42.666667 123.733333-59.733333 187.733333-46.933333 68.266667 8.533333 128 46.933333 166.4 98.133333 12.8 17.066667 8.533333 46.933333-8.533333 59.733334-17.066667 12.8-46.933333 8.533333-59.733334-8.533334-25.6-38.4-68.266667-59.733333-110.933333-68.266666-46.933333-8.533333-89.6 4.266667-128 34.133333-8.533333 4.266667-12.8 8.533333-17.066667 17.066667l-128 128c-64 68.266667-64 174.933333 4.266667 238.933333s170.666667 64 238.933333 0l72.533334-72.533333c17.066667-17.066667 42.666667-17.066667 59.733333 0s17.066667 42.666667 0 59.733333l-72.533333 72.533333c-46.933333 51.2-110.933333 72.533333-174.933334 72.533334z\"\n            p-id=\"5720\"\n            fill=\"#000000\"\n        ></path>\n    </svg>\n)\n","import React, { useState, Fragment } from \"react\"\nimport { APP_CONFIG } from \"./config\"\nimport { svgGithub, svgDoc, svgLab, svgClose, svgLink } from \"./icons\"\nimport \"./App.less\"\n\nfunction App() {\n    const [showPanel, setShowPanel] = useState(false)\n    const [url, setUrl] = useState(\"\")\n    const [head, setHead] = useState(\"default head\")\n    const handleClick = (url, head) => {\n        setShowPanel(true)\n        setUrl(url)\n        setHead(head)\n    }\n    return (\n        <div className=\"app\">\n            <div className=\"app-head\">\n                <div className=\"app-head-text\">{svgLab}XLab实验室项目展示</div>\n                <div className=\"app-head-icon-group\">\n                    <a\n                        className=\"app-head-icon\"\n                        href=\"https://github.com/WHU-X-Lab\"\n                        target=\"_blank\"\n                    >\n                        {svgGithub}Github\n                    </a>\n                    <a\n                        className=\"app-head-icon\"\n                        href=\"https://www.yuque.com/vzbnx0\"\n                        target=\"_blank\"\n                    >\n                        {svgDoc}语雀空间\n                    </a>\n                </div>\n            </div>\n            {showPanel && (\n                <Fragment>\n                    <div\n                        className=\"app-panel-mask\"\n                        onClick={setShowPanel.bind(this, false)}\n                    ></div>\n                    <div className=\"app-panel\">\n                        <div className=\"app-panel-head\">\n                            <div className=\"app-panel-head-icon-group\">\n                                <a href={url}>\n                                    <div className=\"app-panel-head-icon\">\n                                        {svgLink}\n                                    </div>\n                                </a>\n\n                                <div\n                                    className=\"app-panel-head-icon\"\n                                    onClick={setShowPanel.bind(this, false)}\n                                >\n                                    {svgClose}\n                                </div>\n                            </div>\n                            <span className=\"app-panel-head-text\">{head}</span>\n                        </div>\n                        <iframe\n                            className=\"app-panel-iframe\"\n                            src={url}\n                            frameBorder=\"0\"\n                        ></iframe>\n                    </div>\n                </Fragment>\n            )}\n            <div className=\"app-content\">\n                {APP_CONFIG.map((app, index) => {\n                    return (\n                        <div className=\"app-content-item\" key={index}>\n                            <img\n                                className=\"app-content-item-img\"\n                                src={app.image}\n                                alt=\"image\"\n                                onClick={handleClick.bind(\n                                    this,\n                                    app.url,\n                                    app.name\n                                )}\n                            />\n                            <div className=\"app-content-item-footer\">\n                                {app.name}\n                                <a href={app.repo}>{svgGithub}</a>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}